apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ssa
  annotations:
    kompose.cmd: C:\Apps\kompose.exe convert -f .\docker-compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Apps\kompose.exe convert -f .\docker-compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/ep3-bs-docker-default: "true"
        io.kompose.service: db
    spec:
      containers:
        - args:
            - --authentication_policy=caching_sha2_password
            - --skip-performance-schema
            - --skip-mysqlx
          env:
            - name: MAIL_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: MAIL_ADDRESS
                  name: env
            - name: MAIL_SMTP_AUTH
              valueFrom:
                configMapKeyRef:
                  key: MAIL_SMTP_AUTH
                  name: env
            - name: MAIL_SMTP_HOST
              valueFrom:
                configMapKeyRef:
                  key: MAIL_SMTP_HOST
                  name: env
            - name: MAIL_SMTP_PORT
              valueFrom:
                configMapKeyRef:
                  key: MAIL_SMTP_PORT
                  name: env
            - name: MAIL_SMTP_PW
              valueFrom:
                configMapKeyRef:
                  key: MAIL_SMTP_PW
                  name: env
            - name: MAIL_SMTP_USER
              valueFrom:
                configMapKeyRef:
                  key: MAIL_SMTP_USER
                  name: env
            - name: MAIL_TYPE
              valueFrom:
                configMapKeyRef:
                  key: MAIL_TYPE
                  name: env
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_DATABASE
                  name: env
            - name: MYSQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_PASSWORD
                  name: env
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_ROOT_PASSWORD
                  name: env
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_USER
                  name: env
          image: mysql:8.3
          name: db
          resources:
            limits:
              memory: "200Mi"
          ports:
            - containerPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: db-dump
            - mountPath: /etc/mysql/conf.d
              name: db-conf
            - mountPath: /var/lib/mysql
              name: db-data
      restartPolicy: Always
      volumes:
        - name: db-dump
          persistentVolumeClaim:
            claimName: db-dump
        - name: db-conf
          persistentVolumeClaim:
            claimName: db-conf
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data

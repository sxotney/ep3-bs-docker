apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ssa
  annotations:
    kompose.cmd: C:\Apps\kompose.exe convert -f .\docker-compose.yml
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Apps\kompose.exe convert -f .\docker-compose.yml
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/ep3-bs-docker-default: "true"
        io.kompose.service: app
    spec:
      containers:
        - image: carlscotneyun/ep3-bs-docker-app:latest
          resources:
            limits:
              memory: "256Mi"
          env:
           - name: MAIL_ADDRESS
             valueFrom:
               configMapKeyRef:
                 key: MAIL_ADDRESS
                 name: env
           - name: MAIL_SMTP_AUTH
             valueFrom:
               configMapKeyRef:
                 key: MAIL_SMTP_AUTH
                 name: env
           - name: MAIL_SMTP_HOST
             valueFrom:
               configMapKeyRef:
                 key: MAIL_SMTP_HOST
                 name: env
           - name: MAIL_SMTP_PORT
             valueFrom:
               configMapKeyRef:
                 key: MAIL_SMTP_PORT
                 name: env
           - name: MAIL_SMTP_PW
             valueFrom:
               configMapKeyRef:
                 key: MAIL_SMTP_PW
                 name: env
           - name: MAIL_SMTP_USER
             valueFrom:
               configMapKeyRef:
                 key: MAIL_SMTP_USER
                 name: env
           - name: MAIL_TYPE
             valueFrom:
               configMapKeyRef:
                 key: MAIL_TYPE
                 name: env
           - name: MYSQL_DATABASE
             valueFrom:
               configMapKeyRef:
                 key: MYSQL_DATABASE
                 name: env
           - name: MYSQL_PASSWORD
             valueFrom:
               configMapKeyRef:
                 key: MYSQL_PASSWORD
                 name: env
           - name: MYSQL_ROOT_PASSWORD
             valueFrom:
               configMapKeyRef:
                 key: MYSQL_ROOT_PASSWORD
                 name: env
           - name: MYSQL_USER
             valueFrom:
               configMapKeyRef:
                 key: MYSQL_USER
                 name: env
           - name: APACHE_DOCUMENT_ROOT
             valueFrom:
              configMapKeyRef:
               key: APACHE_DOCUMENT_ROOT
               name: env
          name: app
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /var/www/html
              name: app
      restartPolicy: Always
      volumes:
        - name: app
          persistentVolumeClaim:
            claimName: app
